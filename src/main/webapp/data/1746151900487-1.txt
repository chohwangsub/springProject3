{ mysale / mysale_seq }

create sequence mysale_seq
start with 1
increment by 1
maxvalue 99999;

create table mysale (
 seqid   number not null primary key, 
 code    varchar2(50) not null,
 subject varchar2(100) not null,
 price   number default 0,
 saledt  timestamp
);

insert into mysale(  SEQID
					,CODE
					,SUBJECT
					,PRICE
					,SALEDT)
			values(  mysale_seq.nextval
					,'a101'
					,'java책'
					,'5000'
					,sysdate
			);

-- primary key : 중복방지(고유값보장)
                 빠른검색(인덱스테이블등록)

-- 컬럼의 빈값 처리: (1)MYSQL : 공백(o),NULL(o) : 구분함
				 (2)ORACLE : 공백(x),NULL(o) : 구분안함
				 
{ 출력 }

1. SELECT  SEQID   SEQID
		  ,CODE	   CODE
		  ,SUBJECT SUBJECT
		  ,PRICE   PRICE
		  ,TO_CHAR(SALEDT,'YYYY-MM-DD')  SALEDT
    FROM 
		  MYSALE;

2. SELECT  CODE	   아이디
		  ,SUBJECT 상품명
		  ,NVL2(PRICE,'결재완료','미결재') 결재여부
		  -- NVL2(데이터값,널값이아닌경우,널값인경우)
    FROM 
		  MYSALE;
		  
===============================================

create table member1 (
 seqid number primary key,            -- 중복방지, not null(내장o)
 userid varchar2(50) not null unique, -- 중복방지, not null(내장x)
 pass varchar2(100) not null,
 name varchar2(50),
 gender char(1) check(gender in('M','F')),
 birth date default '1900-01-01',
 regdt timestamp
);

comment on table member1 is '회원정보테이블1';
comment on column member1.seqid is '고유번호';
comment on column member1.userid is '사용자ID';


create table member2 (
 seqid number,                  -- primary key
 userid varchar2(50) not null,  -- unique
 pass varchar2(100) not null,
 name varchar2(50),
 gender char(1) ,  -- check
 birth date default '1900-01-01',
 regdt timestamp,
-- (제약조건 키워드) (제약조건 별칭) (제약조건 이름) 
  constraint member2_seqid_pk primary key(seqid),
  constraint member2_userid_un unique(userid),
  constraint member2_gender_ck check(gender in('M','F'))
);
==========================================================

-- 고유번호 중복 시 오류 메세지 --
-- 무결성 제약 조건(C##JAVA2.MEMBER2_SEQID_PK)에 위배됩니다

-- 사용자ID 중복 시 오류 메세지 --
-- 무결성 제약 조건(C##JAVA2.MEMBER2_USERID_UN)에 위배됩니다

-- 사용자ID 공백 시 오류 메세지 -- 
-- NULL을 ("C##JAVA2"."MEMBER2"."USERID") 안에 삽입할 수 없습니다

-- 암호 공백 시 오류 메세지 --
-- NULL을 ("C##JAVA2"."MEMBER2"."PASS") 안에 삽입할 수 없습니다

-- 성별에 다른 값을 넣는 경우 메세지 -- 
-- 체크 제약조건(C##JAVA2.MEMBER2_GENDER_CK)이 위배되었습니다

insert into member2 values
('2','test1','1234','테스트2','F','2000-07-05',sysdate);


create table member3 (
 seqid number,
 userid varchar2(50) not null,
 pass varchar2(100) not null,
 name varchar2(50) not null,
 gender char(1) not null, 
 birth date not null default '1900-01-01',
 regdt timestamp,

 constraint member3_seqid_pk primary key(seqid),
 constraint member3_userid_un unique(userid),
 constraint member3_gender_ck check(gender in('M','F'))
);

================================

create table jumsu (
 seqid number not null,
 eng number,
 kor number,
 userid varchar2(50) not null,
 constraint jumsu_fk foreign key(userid) 
					 references member2(userid)
);
------------------------------------------------
create table jumsu2 (
 seqid number not null,
 eng number,
 kor number,
 p_userid varchar2(50) not null,
 constraint jumsu2_fk foreign key(p_userid) 
					 references member2(userid)
);
------------------------------------------------
create table jumsu3 (
 seqid number not null,
 eng number,
 kor number,
 p_seqid number not null,
 constraint jumsu3_fk foreign key(p_seqid) 
					 references member2(seqid)
);

------------------------------------------------
create table jumsu4 (
 seqid number not null,
 eng number,
 kor number,
 p_seqid number not null,
 constraint jumsu3_fk foreign key(p_seqid) 
					 references member2(seqid)
);
 === 오류발생 같은 이름의 별칭을 사용하지 못함 ==
 ------------------------------------------------
create table jumsu5 (
 seqid number not null,
 eng number,
 kor number,
 p_name varchar2(50) not null,
 constraint jumsu5_fk foreign key(p_name) 
					 references member2(name)
);
== 고유 또는 기본 키가 없습니다. 즉, 고유값 설정의 컬럼이 아닌 경우 오류 발생 ==
------------------------------------------------

{데이터 입력}
insert into jumsu values('1','90','80','test1'); -- 입력 성공
insert into jumsu values('1','90','80','test11'); -- 입력 실패 (부모 키가 없습니다)

insert into jumsu values('2','80','70','test2'); -- 입력 성공
insert into jumsu values('3','50','30','test2'); -- 입력 성공
insert into jumsu values('4','67','45','test2'); -- 입력 성공
----------------------------------------------------------------
{데이터 삭제}

(실습1)	부모테이블의 데이터를 삭제 시도 (자식데이터가 있는 경우)
		delete from member2 where userid='test1';  -- 실패(자식 레코드가 발견되었습니다)
        
(실습2)  부모테이블의 데이터를 삭제 시도 (자식데이터가 없는 경우)
		delete from member2 where userid='test3';  -- 성공(자식 레코드가 없음)

(실습3)	부모테이블의 데이터를 삭제 시도 (자식데이터가 있는 경우)
        (1) 자식 테이블의 레코드를 먼저 삭제/ 부모테이블의 레코드 삭제 시도
		
